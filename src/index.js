/**
 * Dyspatch API
 * # Introduction  The Dyspatch API is based on the REST paradigm, and features resource based URLs with standard HTTP response codes to indicate errors. We use standard HTTP authentication and request verbs, and all responses are JSON formatted. See our [Implementation Guide](https://docs.dyspatch.io/development/implementing_dyspatch/) for more details on how to implement Dyspatch.  ## API Client Libraries Dyspatch provides API Clients for popular languages and web frameworks.  - [Java](https://github.com/getdyspatch/dyspatch-java) - [Javascript](https://github.com/getdyspatch/dyspatch-javascript) - [Python](https://github.com/getdyspatch/dyspatch-python) - [C#](https://github.com/getdyspatch/dyspatch-dotnet) - [Go](https://github.com/getdyspatch/dyspatch-golang) - [Ruby](https://github.com/getdyspatch/dyspatch-ruby) 
 *
 * The version of the OpenAPI document: 2020.08
 * Contact: support@dyspatch.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import APIError from './dyspatch-client/APIError';
import CompiledRead from './dyspatch-client/CompiledRead';
import Cursor from './dyspatch-client/Cursor';
import DraftMetaRead from './dyspatch-client/DraftMetaRead';
import DraftRead from './dyspatch-client/DraftRead';
import DraftsRead from './dyspatch-client/DraftsRead';
import InlineObject from './dyspatch-client/InlineObject';
import LocalizationKeyRead from './dyspatch-client/LocalizationKeyRead';
import LocalizationMetaRead from './dyspatch-client/LocalizationMetaRead';
import LocalizationRead from './dyspatch-client/LocalizationRead';
import TemplateMetaRead from './dyspatch-client/TemplateMetaRead';
import TemplateRead from './dyspatch-client/TemplateRead';
import TemplatesRead from './dyspatch-client/TemplatesRead';
import DraftsApi from './dyspatch-client/DraftsApi';
import LocalizationsApi from './dyspatch-client/LocalizationsApi';
import TemplatesApi from './dyspatch-client/TemplatesApi';


/**
* _IntroductionThe_Dyspatch_API_is_based_on_the_REST_paradigm_and_features_resource_based_URLs_with_standard_HTTP_responsecodes_to_indicate_errors__We_use_standard_HTTP_authentication_and_request_verbs_and_all_responses_are_JSON_formatted_See_our__Implementation_Guide_https__docs_dyspatch_io_development_implementing_dyspatch__for_more_details_onhow_to_implement_Dyspatch__API_Client_LibrariesDyspatch_provides_API_Clients_for_popular_languages_and_web_frameworks____Java_https__github_com_getdyspatch_dyspatch_java___Javascript_https__github_com_getdyspatch_dyspatch_javascript___Python_https__github_com_getdyspatch_dyspatch_python___C_https__github_com_getdyspatch_dyspatch_dotnet___Go_https__github_com_getdyspatch_dyspatch_golang___Ruby_https__github_com_getdyspatch_dyspatch_ruby.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var DyspatchClient = require('index'); // See note below*.
* var xxxSvc = new DyspatchClient.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new DyspatchClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new DyspatchClient.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new DyspatchClient.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 6.0.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The APIError model constructor.
     * @property {module:dyspatch-client/APIError}
     */
    APIError,

    /**
     * The CompiledRead model constructor.
     * @property {module:dyspatch-client/CompiledRead}
     */
    CompiledRead,

    /**
     * The Cursor model constructor.
     * @property {module:dyspatch-client/Cursor}
     */
    Cursor,

    /**
     * The DraftMetaRead model constructor.
     * @property {module:dyspatch-client/DraftMetaRead}
     */
    DraftMetaRead,

    /**
     * The DraftRead model constructor.
     * @property {module:dyspatch-client/DraftRead}
     */
    DraftRead,

    /**
     * The DraftsRead model constructor.
     * @property {module:dyspatch-client/DraftsRead}
     */
    DraftsRead,

    /**
     * The InlineObject model constructor.
     * @property {module:dyspatch-client/InlineObject}
     */
    InlineObject,

    /**
     * The LocalizationKeyRead model constructor.
     * @property {module:dyspatch-client/LocalizationKeyRead}
     */
    LocalizationKeyRead,

    /**
     * The LocalizationMetaRead model constructor.
     * @property {module:dyspatch-client/LocalizationMetaRead}
     */
    LocalizationMetaRead,

    /**
     * The LocalizationRead model constructor.
     * @property {module:dyspatch-client/LocalizationRead}
     */
    LocalizationRead,

    /**
     * The TemplateMetaRead model constructor.
     * @property {module:dyspatch-client/TemplateMetaRead}
     */
    TemplateMetaRead,

    /**
     * The TemplateRead model constructor.
     * @property {module:dyspatch-client/TemplateRead}
     */
    TemplateRead,

    /**
     * The TemplatesRead model constructor.
     * @property {module:dyspatch-client/TemplatesRead}
     */
    TemplatesRead,

    /**
    * The DraftsApi service constructor.
    * @property {module:dyspatch-client/DraftsApi}
    */
    DraftsApi,

    /**
    * The LocalizationsApi service constructor.
    * @property {module:dyspatch-client/LocalizationsApi}
    */
    LocalizationsApi,

    /**
    * The TemplatesApi service constructor.
    * @property {module:dyspatch-client/TemplatesApi}
    */
    TemplatesApi
};
