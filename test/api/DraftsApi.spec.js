/**
 * Dyspatch API
 * # Introduction  The Dyspatch API is based on the REST paradigm and features resource based URLs with standard HTTP response codes to indicate errors. We use standard HTTP authentication and request verbs and all responses are JSON formatted. See our [Implementation Guide](https://docs.dyspatch.io/development/implementing_dyspatch/) for more details on how to implement Dyspatch.  ## API Client Libraries  Dyspatch provides API Clients for the following languages and web frameworks:  - [Java](https://github.com/getdyspatch/dyspatch-java) - [Javascript](https://github.com/getdyspatch/dyspatch-javascript) - [Python](https://github.com/getdyspatch/dyspatch-python) - [C#](https://github.com/getdyspatch/dyspatch-dotnet) - [Go](https://github.com/getdyspatch/dyspatch-golang) - [Ruby](https://github.com/getdyspatch/dyspatch-ruby) 
 *
 * OpenAPI spec version: 2019.10
 * Contact: support@dyspatch.io
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', '../../src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require('../../src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.DyspatchClient);
  }
}(this, function(expect, DyspatchClient) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new DyspatchClient.DraftsApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('DraftsApi', function() {
    describe('draftsDraftIdGet', function() {
      it('should call draftsDraftIdGet successfully', function(done) {
        //uncomment below and update the code to test draftsDraftIdGet
        //instance.draftsDraftIdGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('draftsDraftIdLocalizationKeysGet', function() {
      it('should call draftsDraftIdLocalizationKeysGet successfully', function(done) {
        //uncomment below and update the code to test draftsDraftIdLocalizationKeysGet
        //instance.draftsDraftIdLocalizationKeysGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('draftsDraftIdLocalizationsGet', function() {
      it('should call draftsDraftIdLocalizationsGet successfully', function(done) {
        //uncomment below and update the code to test draftsDraftIdLocalizationsGet
        //instance.draftsDraftIdLocalizationsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('draftsDraftIdLocalizationsLanguageIdDelete', function() {
      it('should call draftsDraftIdLocalizationsLanguageIdDelete successfully', function(done) {
        //uncomment below and update the code to test draftsDraftIdLocalizationsLanguageIdDelete
        //instance.draftsDraftIdLocalizationsLanguageIdDelete(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('draftsDraftIdLocalizationsLanguageIdPut', function() {
      it('should call draftsDraftIdLocalizationsLanguageIdPut successfully', function(done) {
        //uncomment below and update the code to test draftsDraftIdLocalizationsLanguageIdPut
        //instance.draftsDraftIdLocalizationsLanguageIdPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('draftsDraftIdLocalizationsLanguageIdTranslationsPut', function() {
      it('should call draftsDraftIdLocalizationsLanguageIdTranslationsPut successfully', function(done) {
        //uncomment below and update the code to test draftsDraftIdLocalizationsLanguageIdTranslationsPut
        //instance.draftsDraftIdLocalizationsLanguageIdTranslationsPut(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('draftsDraftIdPublishRequestPost', function() {
      it('should call draftsDraftIdPublishRequestPost successfully', function(done) {
        //uncomment below and update the code to test draftsDraftIdPublishRequestPost
        //instance.draftsDraftIdPublishRequestPost(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('draftsGet', function() {
      it('should call draftsGet successfully', function(done) {
        //uncomment below and update the code to test draftsGet
        //instance.draftsGet(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
